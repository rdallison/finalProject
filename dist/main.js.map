{"version":3,"sources":["webpack://Client/./src/client/index.js","webpack://Client/webpack/bootstrap","webpack://Client/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kEAAkE,wBAAwB,WAAW,0BAA0B,SAAS,sBAAsB;AAC9J;AACA;AACA;AACA,aAAa;;;AAGb,SAAS;;AAET,2BAA2B,oDAAoD;;AAE/E,KAAK;;AAEL,CAAC;;;AAGD;;AAEA,wBAAwB,IAAI,MAAM,OAAO,KAAK,yBAAyB;AACvE;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL,uDAAuD,IAAI;AAC3D;AACA;;;;AAIA;;AAEA,wBAAwB,QAAQ,EAAE,KAAK,YAAY,SAAS;AAC5D;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL,uDAAuD,IAAI;AAC3D;AACA;;AAEA;;AAEA,wBAAwB,IAAI,MAAM,IAAI,OAAO,KAAK,OAAO,OAAO;AAChE;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL,uDAAuD,IAAI;AAC3D;AACA;;;;AAIA,8CAA8C;;;;AAI9C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,2DAA2D,MAAM;;AAEjE;AACA,C;;;;;;UCxHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"main.js","sourcesContent":["\n/* Global Variables */\nconst baseURL = 'http://api.geonames.org/searchJSON?q=';\nconst userName = 'rayshawndallison';\ndocument.getElementById('returnDate').setAttribute('minDate',`2020-11-11`);\n\n// Create a new date instance dynamically with JS\nlet d = new Date();\n\n\ndocument.getElementById('generate').addEventListener('click', () => {\n    let city = document.getElementById('city').value;\n    getCoordinates(baseURL, userName, city)\n    .then(data => {\n        let travelDate = document.getElementById('travelDate').value.split('-');\n        let travelMonth = travelDate[1];\n        let travelYear = travelDate[0];\n        let travelDay = travelDate[2];\n        const weatherBiturl = 'http://api.weatherbit.io/v2.0/current?';\n        const weatherBitapi = '7d92255b96864307aa9e94562d3cd52e';\n        getWeather(weatherBiturl, weatherBitapi, data.geonames[0].lng, data.geonames[0].lat, data.geonames[0].name)\n        .then(data => {\n            const pixurl = 'https://pixabay.com/api/?';\n            const pixapi = '19211440-fc37a8ac17131a95f2289b0de';\n            getPic(pixurl, pixapi, data.data[0].city_name)\n            .then(data => {\n              const pic = document.createElement('img');\n              pic.src = data.hits[0].largeImageURL;\n              pic.alt = data.hits[0].tags;\n              document.getElementById('app').appendChild(pic);\n              let returnDate = document.getElementById('returnDate').value.split('-');\n              returnDate.minDate = '0';\n            let returnMonth = returnDate[1];\n            let returnYear = returnDate[0];\n            let returnDay = returnDate[2];\n\n            let tripLength = document.createElement('p');\n            let tripLengthDiv = document.createElement('div');\n            tripLength.innerText = `You will be gone for Years: ${returnYear - travelYear} Months: ${returnMonth - travelMonth} Days: ${returnDay - travelDay}`\n            tripLength.style.display = 'inline-block';\n            document.getElementById('title').appendChild(tripLengthDiv);\n            tripLengthDiv.appendChild(tripLength);\n            })\n\n            \n        })\n        \n        //postWeather('', {temp: data.main.temp, date: newDate, feelings: feel});\n        \n    })\n    \n});\n\n\nconst getPic = async (url, apiKey, city) => {\n\n    const wholeURL = `${url}key=${apiKey}&q=${encodeURIComponent(city)}&image_type=photo`;\n    const response = await fetch(wholeURL);\n    try{\n        const data = await response.json();\n        //console.log(data);\n        return data;\n\n    }catch(err){\n        console.log(`We have encountered this error: ${err}`);\n    }\n}\n\n\n\nconst getCoordinates = async (baseURL, userName, city) => {\n\n    const wholeURL = `${baseURL}${city}&username=${userName}`;\n    const response = await fetch(wholeURL);\n    try{\n        const data = await response.json();\n        //console.log(data);\n        return data;\n\n    }catch(err){\n        console.log(`We have encountered this error: ${err}`);\n    }\n}\n\nconst getWeather = async (url, apiKey, long, lat, city) => {\n\n    const wholeURL = `${url}lat=${lat}&lon=${long}&key=${apiKey}`;\n    const response = await fetch(wholeURL);\n    try{\n        const data = await response.json();\n        //console.log(data);\n        return data;\n\n    }catch(err){\n        console.log(`We have encountered this error: ${err}`);\n    }\n}\n\n\n\nconst postWeather = async (url = '', data = {}) => {\n    \n\n\n    const response = await fetch(url, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n    try{\n        newData = await response.json();\n        console.log(newData);\n        return newData;\n        }catch(error){\n            console.log(`we have encountered this error: ${error}`);\n\n        }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/client/index.js\");\n"],"sourceRoot":""}